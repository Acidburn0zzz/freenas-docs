#!/usr/bin/env perl

use strict;
use warnings;

use File::Basename;
use Getopt::Std;
use Scalar::Util qw(looks_like_number);

our ($opt_h, $opt_t);

our $prolog = <<PROLOG;
  <!-- googlize start -->
  <!-- Global site tag (gtag.js) - Google Analytics -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=UA-2174408-18"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'UA-2174408-18');
  </script>
  <!-- googlize end -->
PROLOG

our $epilog = <<EPILOG;
  <!-- googlize button start -->
  <a href="/archive.html"
  style="position: fixed;
  top:%%TOP%%px;
  right: 4px;
  display: block;
  color: #28343b;
  padding: 0.4em 0.8em;
  font-weight: bold;
  background: rgb(131,216,255);
  background: -moz-linear-gradient(left, rgba(131,216,255,1) 0%, rgba(105,173,250,1) 35%, rgba(105,173,250,1) 80%, rgba(67,152,248,1) 100%);
  background: -webkit-linear-gradient(left, rgba(131,216,255,1) 0%,rgba(105,173,250,1) 35%,rgba(105,173,250,1) 80%,rgba(67,152,248,1) 100%);
  background: linear-gradient(to right, rgba(131,216,255,1) 0%,rgba(105,173,250,1) 35%,rgba(105,173,250,1) 80%,rgba(67,152,248,1) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#83d8ff',endColorstr='#4398f8',GradientType=1);
  border: none;
  border-bottom: none;
  border-top: none;
  -webkit-box-shadow: 0px 2px 6px 1px rgba(204,121,167,0.5);
  -moz-box-shadow: 0px 2px 6px 1px rgba(204,121,167,0.5);
  box-shadow: 0px 2px 6px 1px rgba(204,121,167,0.5);
  ">Previous Versions</a>
  <!-- googlize button end -->
EPILOG

our $prog = basename($0);

sub usage {
    print <<USAGE;
usage: $prog -h
       $prog [-t topcoord] [list of HTML files]

    -h  show summary of command line options and exit

$prog rewrites HTML files, inserting Google Analytics code at
</head> and a floating link button at </body>. $prog can be
run multiple times on an HTML file. If the added code is
already present, it is replaced, not added again.

A top coordinate for the button can be specified with -t. This
makes it possible to place the button farther down the page to
avoid overlaying navigation buttons. The default is zero.

Example:

    ./$prog -t25 processed/_build/html/*.html
USAGE
    exit ;
}

sub read_file {
    my $fname = shift;
    open my $fh, '<', $fname or die "cannot open '$fname':$!\n";
    my $content = do { local($/); <$fh> };
    close $fh or die "could not close file:$!\n";
    return $content;
}

sub write_file {
    my ($fname, $content) = @_;
    open my $fh, ">", $fname or die "could not write '$fname':$!\n";
    print $fh $content;
    close $fh or die "could not close '$fname':$!\n";
}

getopts('ht:');
usage() if $opt_h;

die '** -t argument (top coordinate) must be a number' unless (looks_like_number($opt_t));
$epilog =~ s/%%TOP%%/$opt_t/;
print "$epilog\n";

# main loop
foreach my $fname (@ARGV) {
    my $html = read_file($fname);

    print "$fname -";
    print " GA code ";
    if ( $html =~ /<!-- googlize start -->/ ) {
        print "replaced";
        $html =~ s%  <!-- googlize start -->.*<!-- googlize end -->\s+</head>%$prolog</head>%gs;
    } else {
        print "installed";
        $html =~ s%</head>%$prolog</head>%gs;
    }
    print ", button code ";
    if ( $html =~ /<!-- googlize button start -->/ ) {
        print "replaced";
        $html =~ s%  <!-- googlize button start -->.*<!-- googlize button end -->\s+</body>%$epilog</body>%gs;
    } else {
        print "installed";
        $html =~ s%</body>%$epilog</body>%gs;
    }
    print "\n";

    write_file($fname, $html);
}
